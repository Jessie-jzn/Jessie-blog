(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{437:function(t,s,n){"use strict";n.r(s);var a=n(2),r=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("我想，在大多数面试中，大家都会被面试官询问到闭包这一道经典的面试题吧，那么今天我们就常考的几道面试题来谈谈闭包。")]),t._v(" "),s("ul",[s("li",[t._v("闭包是什么？")]),t._v(" "),s("li",[t._v("闭包的作用与应用是什么？")]),t._v(" "),s("li",[t._v("闭包产生的变量如何被回收？")]),t._v(" "),s("li",[t._v("过度使用闭包会产生什么问题？")])]),t._v(" "),s("h2",{attrs:{id:"闭包是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包是什么"}},[t._v("#")]),t._v(" 闭包是什么？")]),t._v(" "),s("h3",{attrs:{id:"概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),s("blockquote",[s("p",[t._v("官方：当函数可以记住并访问所在的词法作用域时，就产生了闭包，即使函数是在当前词法作用域之外执行")]),t._v(" "),s("p",[t._v("自我理解：就是一个函数嵌套另一个函数。并且被嵌套函数可以使用外部函数的变量，就产生了闭包。换言之就是外部变量+函数")])]),t._v(" "),s("h3",{attrs:{id:"基础代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础代码"}},[t._v("#")]),t._v(" 基础代码")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" fn2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" fn3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("上述代码有以下几个作用域：")]),t._v(" "),s("ul",[s("li",[t._v("fn1 全局作用域")]),t._v(" "),s("li",[t._v("fn1 函数作用域内包含 num 变量和 fn2 函数")]),t._v(" "),s("li",[t._v("fn2 函数作用域，能够访问父级函数的变量 num")]),t._v(" "),s("li",[t._v("fn3 全局作用域，赋值 fn1，由于引用关系实际上就是 fn2 函数本身，同样能够访问 fn1 作用域内的 num 变量，也就是上述概念所说的 fn2 在当前词法作用域之外执行")])]),t._v(" "),s("p",[t._v("说到这，我们来进一步解释下作用域链和词法作用域，方便更好理解闭包。")]),t._v(" "),s("h3",{attrs:{id:"作用域链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用域链"}},[t._v("#")]),t._v(" 作用域链")]),t._v(" "),s("blockquote",[s("p",[t._v("作用域：变量、函数等起作用的范围")])]),t._v(" "),s("ul",[s("li",[t._v("全局作用域：在代码中的任何地方都能访问，生命周期伴随着页面的生命周期")]),t._v(" "),s("li",[t._v("函数作用域：函数内部定义的变量或函数，并且定义的变量或者函数只能在函数内部被使用，函数执行结束之后，函数内部定义的变量会被销毁")]),t._v(" "),s("li",[t._v("块级作用域：作用块内声明的变量不影响块外面的变量")])]),t._v(" "),s("p",[t._v("先来看一段代码")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我是fn1内部的"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我是fn2内部的"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我想输出fn1内部的变量"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("执行之后会发现，控制台报错：“Uncaught ReferenceError: str is not defined”")]),t._v(" "),s("p",[t._v("那是因为 str2 是局部变量，是属于 fn1 的私有财产，不能想拿别人的 💰 就拿,会被抓走的。")]),t._v(" "),s("p",[t._v("那么我们再来看下一段代码")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我是fn2内部的"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我是全局上下文的"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("猜猜此刻输出什么？")]),t._v(" "),s("p",[s("em",[t._v("答案是：“我是全局上下文的”")])]),t._v(" "),s("p",[t._v("在每个执行上下文的变量环境之中，都会包含一个外部引用 ➡️ 用来指向外部的执行上下文。\n当一段代码使用了一个变量后，js 引擎会在“当前的执行上下文”中查找该变量。")]),t._v(" "),s("p",[t._v("也就是说，在执行 fn1 函数的时候，会查找 str 这个变量，如果在当前的变量环境中没有查找到，就会到外部引用所指向的执行上下文查找。")]),t._v(" "),s("p",[t._v("fn1 和 fn2 函数的外部指向都是指向全局上下文的，换言之，如果在 fn1 和 fn2 函数使用了外部变量，那么 js 引擎就会到全局执行上下文查找。")]),t._v(" "),s("p",[t._v("这时候大多数同学就有一个疑问了，fn1 函数不是在 fn2 中被调用的吗？为什么不是指向 fn2 中的变量？")]),t._v(" "),s("p",[s("strong",[t._v("那是因为作用域链是由词法作用域决定的。")])]),t._v(" "),s("h3",{attrs:{id:"词法作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#词法作用域"}},[t._v("#")]),t._v(" 词法作用域")]),t._v(" "),s("blockquote",[s("p",[t._v("作用域是由代码中函数声明的位置来决定的。")]),t._v(" "),s("p",[t._v("词法作用域是静态的作用域，通过它就能够预测代码在执行过程中如何查找标识符")])]),t._v(" "),s("p",[t._v("来看下面一段代码")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我是全局上下文的"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fn3想输出str的变量"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我是fn1内部的"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我是fn1内部的str"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我是fn2内部的"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fn2想输出str1的变量"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" str1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fn2想输出str的变量"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("全局作用域：str、fn1、fn3")]),t._v(" "),s("li",[t._v("fn1 函数作用域：str1、str、fn2")]),t._v(" "),s("li",[t._v("fn2 函数作用域：str2")])]),t._v(" "),s("p",[t._v("输出结果为")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("fn2想输出str1的变量 我是fn1内部的\nfn2想输出str的变量 我是fn1内部的str\nfn3想输出str的变量 我是全局上下文的\n")])])]),s("p",[t._v("因为 js 作用域是由词法作用域决定的，所以在 fn2 中整个词法作用域链的顺序是：fn2 函数作用域 ➡️fn1 函数作用域 ➡️ 全局作用域")]),t._v(" "),s("p",[t._v("而因为 fn3 的代码位置是在全局作用域下的，即便是被 fn1 引用，它的词法作用域链是：fn3 函数作用域 ➡️ 全局作用域")]),t._v(" "),s("p",[s("strong",[t._v("结论：词法作用域和代码位置相关，和函数怎么调用没有关系")])]),t._v(" "),s("h2",{attrs:{id:"闭包的作用与应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包的作用与应用"}},[t._v("#")]),t._v(" 闭包的作用与应用")]),t._v(" "),s("ul",[s("li",[t._v("闭包是 js 自身语法的一部分，保证了 js 自身的运行")]),t._v(" "),s("li",[t._v("保护私有变量")]),t._v(" "),s("li",[t._v("维持内部私有变量的状态")]),t._v(" "),s("li",[t._v("定义模块，将操作函数暴露给外部，细节隐藏在模块中")]),t._v(" "),s("li",[t._v("实现私有成员")]),t._v(" "),s("li",[t._v("解决 i 的问题")]),t._v(" "),s("li",[t._v("防抖和节流")])]),t._v(" "),s("h2",{attrs:{id:"闭包是如何被回收的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包是如何被回收的"}},[t._v("#")]),t._v(" 闭包是如何被回收的？")]),t._v(" "),s("p",[t._v("因为闭包函数的存在，延长了外部局部变量的生存周期，如果闭包会一直存在直到页面关闭，但如果这个闭包不在使用的话，就会造成内存泄露。")]),t._v(" "),s("p",[t._v("那么，js 如何知道什么时候变量该被回收呢？")]),t._v(" "),s("p",[t._v("那就不得不谈谈垃圾回收机制")]),t._v(" "),s("h3",{attrs:{id:"垃圾回收机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收机制"}},[t._v("#")]),t._v(" 垃圾回收机制")]),t._v(" "),s("p",[t._v("javascript 使用的是自动垃圾回收策略，通过向下移动执行状态的指针来销毁该函数保存在栈中的执行上下文。")]),t._v(" "),s("p",[t._v("也就是说，当函数执行后，局部变量通常就会被标记为“可回收”，然后在下一次自动垃圾收集时（GC）回收")]),t._v(" "),s("p",[t._v("而在闭包中，fn1 中的变量 num 本该在 fn1 函数结束后被回收，但是因为被 fn2 调用，导致了延长了 num 的生命周期")]),t._v(" "),s("p",[s("strong",[t._v("闭包会保留全部父级变量，不管有没有用")])]),t._v(" "),s("h2",{attrs:{id:"过度使用闭包会产生什么问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#过度使用闭包会产生什么问题"}},[t._v("#")]),t._v(" 过度使用闭包会产生什么问题？")]),t._v(" "),s("p",[t._v("导致内存泄漏。")]),t._v(" "),s("p",[t._v("如果使用频率不高，而且占用内存比较大的话，尽量让闭包成为一个局部变量。")])])}),[],!1,null,null,null);s.default=r.exports}}]);