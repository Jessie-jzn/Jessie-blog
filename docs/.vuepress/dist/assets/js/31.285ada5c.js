(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{439:function(t,s,a){"use strict";a.r(s);var r=a(2),p=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"getstaticprops"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getstaticprops"}},[t._v("#")]),t._v(" getStaticProps")]),t._v(" "),s("h3",{attrs:{id:"作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用"}},[t._v("#")]),t._v(" 作用")]),t._v(" "),s("p",[t._v("getStaticProps 是 Next.js 中的一个特殊的异步函数，用于在构建时获取静态数据并将其注入到页面的 props 中。它的主要作用是在构建时预先获取页面所需的数据，以便将数据静态地注入到页面中，从而提高页面的性能和 SEO。")]),t._v(" "),s("p",[t._v("使用 getStaticProps 函数，可以从各种来源获取数据，例如文件系统、数据库、外部 API 等。一旦数据被获取，它将会作为参数传递给页面组件，并在构建时被预渲染到静态 HTML 文件中。")]),t._v(" "),s("p",[t._v("主要用途包括：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("数据预取：在构建时从外部数据源获取数据，以便将其预先加载到页面中。这样可以确保页面在渲染时具有所需的数据，从而避免客户端请求数据时出现延迟。")])]),t._v(" "),s("li",[s("p",[t._v("静态生成：使用 getStaticProps 函数可以将页面预渲染为静态 HTML 文件，这样可以提高页面的加载速度，并且使页面对搜索引擎更友好，有助于提升 SEO。")])]),t._v(" "),s("li",[s("p",[t._v("动态路由：在使用动态路由时，可以在每个动态页面组件中使用 getStaticProps 函数来获取动态路由参数对应的数据，从而为每个动态页面生成静态 HTML 文件。")])])]),t._v(" "),s("p",[t._v("总的来说，getStaticProps 函数是 Next.js 中用于获取静态页面数据并进行预渲染的重要工具，能够有效地提高页面性能和 SEO，并为开发人员提供更好的开发体验。")]),t._v(" "),s("h4",{attrs:{id:"可以在多个页面中写getstaticprops吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可以在多个页面中写getstaticprops吗"}},[t._v("#")]),t._v(" 可以在多个页面中写getStaticProps吗？")]),t._v(" "),s("p",[t._v("在 Next.js 中，每个页面组件都可以包含一个 getStaticProps 函数，用于在构建时获取静态数据并将其注入到页面的 props 中。")]),t._v(" "),s("p",[t._v("当在多个页面中编写 getStaticProps 函数时，每个函数都将独立地执行，并且分别为其所在的页面预取和注入数据。这意味着可以根据每个页面的需求，从不同的数据源获取不同的数据，并将其预渲染到相应的页面中。")]),t._v(" "),s("p",[t._v("每个页面组件的 getStaticProps 函数都必须返回一个对象，该对象包含页面所需的静态数据。这些数据将被注入到页面的 props 中，并在构建时被预渲染到静态 HTML 文件中。")]),t._v(" "),s("p",[t._v("总的来说，可以在任意数量的页面中编写 getStaticProps 函数，以满足每个页面的数据需求，并实现页面的静态生成和预渲染。")])])}),[],!1,null,null,null);s.default=p.exports}}]);